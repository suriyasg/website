---
interface Link {
  href: string;
  title: string;
}

interface Year {
	year: string;
	links: Link[];
}

interface Props {
	drop_down_title: string;
	years: Year[];
}

const { drop_down_title, years } = Astro.props;
---
<div class="p-4 m-4 bg-purple-400 rounded-lg shadow-purple-950 shadow-lg">
  <div class="">
    <div class="flex text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2 mb-2 dark:bg-purple-600 dark:hover:bg-purple-70 justify-between w-full accordion-header  shadow-purple-800 shadow-lg">
      <span> {drop_down_title}</span>
    </div>
    <div class="content grid overflow-hidden transition-all duration-300 ease-in-out">
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-1">
		{years.map((yearItem, index) => (
			<div>
			  <div class="font-semibold text-lg mb-0">{yearItem.year}</div>
			  <div class="list-none p-0">
				{yearItem.links.map((link, linkIndex) => (
				  <div class="mb-0">
					<a href={link.href} target="_blank" rel="noopener noreferrer" class="no-underline text-black hover:text-white transition duration-300">
					  {link.title}
					</a>
				  </div>
				))}
			  </div>
			</div>
		  ))}
      </div>
    </div>
  </div>
</div>

<script>


document.querySelectorAll('.accordion-header').forEach(div => {
		const content = div.nextElementSibling;
		// content.classList.toggle('open'); 

		const isOpen = content.classList.contains('open');
		const contentHeight = isOpen ? '0px' : `${content.scrollHeight}px`;
		(content as HTMLElement).style.maxHeight = contentHeight;
	});
	// document.querySelectorAll('.accordion-header').forEach(div => {
	// 	const content = div.nextElementSibling;
	// 	content.classList.toggle('open');  // Toggle class first

	// 	const isOpen = content.classList.contains('open');
	// 	const contentHeight = isOpen ? '0px' : `${content.scrollHeight}px`;
	// 	(content as HTMLElement).style.maxHeight = contentHeight;
	// });

	document.querySelectorAll('.accordion-header').forEach(div => {
	div.addEventListener('click', () => {
		const content = div.nextElementSibling;
		content.classList.toggle('open');  // Toggle class first

		const isOpen = content.classList.contains('open');
		const contentHeight = isOpen ? '0px' : `${content.scrollHeight}px`;
		(content as HTMLElement).style.maxHeight = contentHeight;
	});
	});
  </script>
